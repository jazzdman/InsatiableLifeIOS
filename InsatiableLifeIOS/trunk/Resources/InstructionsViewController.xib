<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="4514" systemVersion="13B42" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none">
    <dependencies>
        <deployment defaultVersion="1072" identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="3747"/>
    </dependencies>
    <objects>
        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner" customClass="SettingsViewController">
            <connections>
                <outlet property="view" destination="3" id="5"/>
            </connections>
        </placeholder>
        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
        <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" showsHorizontalScrollIndicator="NO" editable="NO" id="3">
            <rect key="frame" x="0.0" y="0.0" width="320" height="440"/>
            <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
            <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="calibratedRGB"/>
            <accessibility key="accessibilityConfiguration">
                <accessibilityTraits key="traits" none="YES" staticText="YES"/>
            </accessibility>
            <string key="text">This application is intended to help a busy person do the following:
 
1)  Create a menu for the week at random

2)  Create a grocery list from the menu

3)  Keep track of any food items that can be stored at room temperature for future use (e.g. flour, spices, oil)

 
This application accomplishes these tasks through a series of 4 tabs.  Those tabs are shown at the bottom of the screen.  They are:
 
1)  The Menu View

2)  The Groceries View

3)  The Pantry View

4)  The Settings View

 
The Settings View
 
When a user starts this application for the first time, this is the screen she is presented with.  The user is able to return to this view at any time thereafter.  This screen allows the user to set limits on the search results that the Menu View comes up with.  The user is able to set the maximum amount of time a recipe should take to prepare , the maximum number of calories per serving and the number of servings a recipe should provide.  Finally, selecting the “Shopping Day” row allows the user to define the day of the week he does shopping.  This day also serves as a trigger for the Menu View for when it should automatically create a menu for the week.  
 
The Menu View
 
This view is where a weekly menu is created. The use of this view has three steps.  In the first step, if the user enters this view on her shopping day, the application will automatically start a search for recipes.  This search is done at random using a large list of potential main ingredients and preparations and selected from a website called allrecipes.com.  These random results are then searched to find those that conform to the “Max Prep Time” and “Calories per Serving” settings.  If the random search does not produce at least seven recipes, a message will be displayed to the user and he can press the Redo button in this view to start over. 
 
If at least seven recipes are found, the second step is for the user to select seven of them for the weekly menu.  At any point, the user can view a recipe itself by tapping on a row.  This will display the selected recipe from allrecipes.com.  The recipe will be scaled to the “Servings” setting the user set in the Settings View.  Pressing and holding on a recipe in the table will select it for the week.  Once seven recipes have been selected, the remaining recipes will be removed.  Recipes chosen out of chronological order will be reordered in ascending order starting from the “Shopping Day” selected.  If the user does not like enough of the listed recipes to select seven, she can press the Redo button to start over again.
 
If seven recipes have been selected, the third step begins.  This allows the user to rearrange the chronological order of the recipes he has chosen.  The user then presses the Done button and can proceed to the Groceries View.
 
The Pantry View
 
This view displays those ingredients that the user can store at room temperature.  It will display the name of the ingredient and the remaining amount of each ingredient.  Ingredients that are bought during a shopping trip are added.  The amount of each ingredient in the pantry is decreased if it used in a recipe.  Once the ingredient is used up, it is removed from this Pantry View. 
 
The Groceries View
 
The contents of this view are derived from both the Menu View and the Pantry View.  The ingredients that make up each of the recipes selected in the Menu View are compiled into a list for display here.  Any ingredients that are already in the pantry are subtracted from the quantity in the pantry and not displayed.  Ingredients that would go beyond what’s in the pantry are included.  As each item is selected, the text for it will turn green and it will be moved to the bottom of the list.  The list is set up with a bit of intelligence.  If an ingredient comes in a container that can be stored at room temperature, this ingredient will be highlighted in yellow in the list.  When the user selects this item on the list, she is asked for the quantity (fluid ounces or weight ounces) of the container.  It may not be possible for InsatiableLifeIOS to determine a whole quantity for an ingredient (e.g. ½ chopped green pepper).  These items will be listed in red.</string>
            <fontDescription key="fontDescription" name="Helvetica" family="Helvetica" pointSize="17"/>
            <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
        </textView>
    </objects>
</document>